import telebot
import random
from telebot import types
from src.modules.user_data.usrcon import save_user_data, is_old_user, get_name_from_db
from src.modules.user_data.usrad import save_user_address, get_user_addresses
from src.modules.restaurants.usrrev import save_user_review
from src.modules.cart.cart_dict import user_cart
from src.modules.restaurants.restik_db import get_rest_from_db, get_dishes_by_rest, get_countrys_from_db, get_rest_by_country, get_rest_by_rating, get_rest_by_price_cat

current_restaurant = {}

def restaurant_choice_handlers(bot):
    '''
    –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞.

    Args:
        bot (telebot.TeleBot): –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ Telegram.
    '''
    @bot.message_handler(func=lambda message: message.text == "–ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞–º")
    def connect_auth_with_rest(message):
        '''
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ç–µ–∫—Å—Ç–æ–º "–ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞–º"

        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞.
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –∏–ª–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º.

        Args:
            message (telebot.types.Message): –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ –∏ —Ç–µ–∫—Å—Ç–µ –∫–æ–º–∞–Ω–¥—ã.
        '''
        user_id = message.chat.id

        markup = types.InlineKeyboardMarkup()
        trust_button = types.InlineKeyboardButton("–ú–Ω–µ –ø–æ–≤–µ–∑–µ—Ç üíõ", callback_data='trust')
        category_button = types.InlineKeyboardButton("–ü–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º üìã", callback_data='category')
        markup.add(trust_button, category_button)
        bot.send_message(user_id, "–î–∞–≤–∞–π—Ç–µ –≤—ã–±–µ—Ä–µ–º —Ä–µ—Å—Ç–æ—Ä–∞–Ω", reply_markup=markup)

    @bot.callback_query_handler(func=lambda call: call.data == 'trust')
    def handle_trust_callback(call):
        '''
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–æ–≤ —Å –¥–∞–Ω–Ω—ã–º–∏ 'trust'

        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞.
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–Ω–æ–ø–∫–∏ —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ —Ç—Ä–µ—Ö —Å–ª—É—á–∞–π–Ω—ã—Ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –∏ –∫–Ω–æ–ø–∫—É "–Ω–∞–∑–∞–¥".

        Args:
            call (telebot.types.CallbackQuery): –û–±—ä–µ–∫—Ç callback-–∑–∞–ø—Ä–æ—Å–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—Ä–æ—Å–µ.
        '''
        user_id = call.message.chat.id
        rest_names = get_rest_from_db()
        random_rest_names = random.sample(rest_names, 3)
        bot.send_message(user_id, "–í—ã –≤—ã–±—Ä–∞–ª–∏ '–ú–Ω–µ –ø–æ–≤–µ–∑–µ—Ç üíõ'")
        markup = types.InlineKeyboardMarkup()
        for rest_name in random_rest_names:
            markup.add(types.InlineKeyboardButton(text=rest_name, callback_data=f'rest_choice:{rest_name}'))
        markup.add(types.InlineKeyboardButton(text="–Ω–∞–∑–∞–¥", callback_data='back'))
        bot.delete_message(user_id, call.message.message_id)
        bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω:", reply_markup=markup)

    @bot.callback_query_handler(func=lambda call: call.data == 'back')
    def handle_back_callback(call):
        '''
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–æ–≤ —Å –¥–∞–Ω–Ω—ã–º–∏ 'back'

        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞.
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –∏–ª–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º.
        –£–¥–∞–ª—è–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è, —á—Ç–æ–±—ã –æ—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç.

        Args:
            call (telebot.types.CallbackQuery): –û–±—ä–µ–∫—Ç callback-–∑–∞–ø—Ä–æ—Å–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—Ä–æ—Å–µ.
        '''
        user_id = call.message.chat.id
        markup = types.InlineKeyboardMarkup()
        trust_button = types.InlineKeyboardButton("–ú–Ω–µ –ø–æ–≤–µ–∑–µ—Ç üíõ", callback_data='trust')
        category_button = types.InlineKeyboardButton("–ü–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º üìã", callback_data='category')
        markup.add(trust_button, category_button)
        bot.send_message(user_id, "–î–∞–≤–∞–π—Ç–µ –≤—ã–±–µ—Ä–µ–º —Ä–µ—Å—Ç–æ—Ä–∞–Ω", reply_markup=markup)
        if call.message.message_id > 0:
            bot.delete_message(user_id, call.message.message_id)
        if call.message.message_id - 1 > 0:
            bot.delete_message(user_id, call.message.message_id - 1)

    @bot.callback_query_handler(func=lambda call: call.data == 'category')
    def handle_category_callback(call):
        '''
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–æ–≤ —Å –¥–∞–Ω–Ω—ã–º–∏ 'category'

        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞.
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø–æ —Ü–µ–Ω–æ–≤—ã–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º, –∫—É—Ö–Ω—è–º –º–∏—Ä–∞, –æ—Ç–∑—ã–≤–∞–º –∏ –≤—Å–µ—Ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤, –∞ —Ç–∞–∫–∂–µ –∫–Ω–æ–ø–∫—É "–Ω–∞–∑–∞–¥".

        Args:
            call (telebot.types.CallbackQuery): –û–±—ä–µ–∫—Ç callback-–∑–∞–ø—Ä–æ—Å–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—Ä–æ—Å–µ.
        '''
        user_id = call.message.chat.id
        markup = types.InlineKeyboardMarkup()
        btn_price_cat = types.InlineKeyboardButton("—Ü–µ–Ω–æ–≤—ã–µ", callback_data="price_cat")
        btn_country_cat = types.InlineKeyboardButton("–∫—É—Ö–Ω–∏ –º–∏—Ä–∞", callback_data="country_cat")
        btn_rating_cat = types.InlineKeyboardButton("–æ—Ç–∑—ã–≤—ã", callback_data="rating_cat")
        btn_all_rests = types.InlineKeyboardButton("–≤—Å–µ", callback_data="all_rests")
        markup.add(btn_country_cat, btn_price_cat)
        markup.add(btn_rating_cat, btn_all_rests)

        markup.add(types.InlineKeyboardButton(text="–Ω–∞–∑–∞–¥", callback_data='back'))
        bot.delete_message(user_id, call.message.message_id)
        bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=markup)

    @bot.callback_query_handler(func=lambda call: call.data == 'country_cat')
    def handle_category_country_selection(call):
        '''
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–æ–≤ —Å –¥–∞–Ω–Ω—ã–º–∏ 'country_cat'

        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫—É—Ö–Ω–∏ –º–∏—Ä–∞.
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–Ω–æ–ø–∫–∏ —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ —Å—Ç—Ä–∞–Ω –∏ –∫–Ω–æ–ø–∫—É "–Ω–∞–∑–∞–¥".

        Args:
            call (telebot.types.CallbackQuery): –û–±—ä–µ–∫—Ç callback-–∑–∞–ø—Ä–æ—Å–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—Ä–æ—Å–µ.
        '''
        user_id = call.message.chat.id
        countries = get_countrys_from_db()
        markup = types.InlineKeyboardMarkup()
        for country in countries:
            markup.add(types.InlineKeyboardButton(text=country, callback_data=f'country_choice:{country}'))
        markup.add(types.InlineKeyboardButton(text="–Ω–∞–∑–∞–¥", callback_data='category'))
        bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ö–Ω—é –º–∏—Ä–∞:", reply_markup=markup)
        bot.delete_message(user_id, call.message.message_id)
        if call.message.message_id - 1 > 0:
            bot.delete_message(user_id, call.message.message_id-1)

    @bot.callback_query_handler(func=lambda call: call.data.startswith('country_choice:'))
    def handle_rest_choice_by_country(call):
        '''
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–æ–≤ —Å –¥–∞–Ω–Ω—ã–º–∏, –Ω–∞—á–∏–Ω–∞—é—â–∏–º–∏—Å—è —Å 'country_choice:'

        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫—É—Ö–Ω–µ –º–∏—Ä–∞.
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–Ω–æ–ø–∫–∏ —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –∏ –∫–Ω–æ–ø–∫—É "–Ω–∞–∑–∞–¥".

        Args:
            call (telebot.types.CallbackQuery): –û–±—ä–µ–∫—Ç callback-–∑–∞–ø—Ä–æ—Å–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—Ä–æ—Å–µ.
        '''

        user_id = call.message.chat.id
        country = call.data.split(':')[1]
        rests = get_rest_by_country(country)
        markup = types.InlineKeyboardMarkup()
        bot.delete_message(user_id, call.message.message_id)
        bot.send_message(user_id, f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫—É—Ö–Ω—é –º–∏—Ä–∞: {country}")
        for rest in rests:
            markup.add(types.InlineKeyboardButton(text=rest, callback_data=f'rest_choice:{rest}'))
        markup.add(types.InlineKeyboardButton(text="–Ω–∞–∑–∞–¥", callback_data='country_cat'))
        bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω:", reply_markup=markup)

    @bot.callback_query_handler(func=lambda call: call.data == 'rating_cat')
    def handle_category_all_reastaurants(call):
        '''
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–æ–≤ —Å –¥–∞–Ω–Ω—ã–º–∏ 'rating_cat'

        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞.
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–Ω–æ–ø–∫–∏ —Å–æ –≤—Å–µ–º–∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞–º–∏ –∏ –∫–Ω–æ–ø–∫—É "–Ω–∞–∑–∞–¥".

        Args:
            call (telebot.types.CallbackQuery): –û–±—ä–µ–∫—Ç callback-–∑–∞–ø—Ä–æ—Å–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—Ä–æ—Å–µ.
        '''
        user_id = call.message.chat.id
        rests = get_rest_by_rating()
        markup = types.InlineKeyboardMarkup()
        for rest in rests:
            markup.add(types.InlineKeyboardButton(text=rest, callback_data=f'rest_choice:{rest}'))
        markup.add(types.InlineKeyboardButton(text="–Ω–∞–∑–∞–¥", callback_data='category'))
        bot.send_message(user_id, "–¢–æ–ø 5 —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –ø–æ –æ—Ç–∑—ã–≤–∞–º:", reply_markup=markup)
        bot.delete_message(user_id, call.message.message_id)
        if call.message.message_id - 1 > 0:
            bot.delete_message(user_id, call.message.message_id-1)

    @bot.callback_query_handler(func=lambda call: call.data == 'all_rests')
    def handle_category_all_reastaurants(call):
        '''
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–æ–≤ —Å –¥–∞–Ω–Ω—ã–º–∏ 'all_rests'

        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞.
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–Ω–æ–ø–∫–∏ —Å–æ –≤—Å–µ–º–∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞–º–∏ –∏ –∫–Ω–æ–ø–∫—É "–Ω–∞–∑–∞–¥".

        Args:
            call (telebot.types.CallbackQuery): –û–±—ä–µ–∫—Ç callback-–∑–∞–ø—Ä–æ—Å–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—Ä–æ—Å–µ.
        '''
        user_id = call.message.chat.id
        rests = get_rest_from_db()
        markup = types.InlineKeyboardMarkup()
        for rest in rests:
            markup.add(types.InlineKeyboardButton(text=rest, callback_data=f'rest_choice:{rest}'))
        markup.add(types.InlineKeyboardButton(text="–Ω–∞–∑–∞–¥", callback_data='category'))
        bot.send_message(user_id, "–í—Å–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã:", reply_markup=markup)
        bot.delete_message(user_id, call.message.message_id)
        if call.message.message_id - 1 > 0:
            bot.delete_message(user_id, call.message.message_id-1)

    @bot.callback_query_handler(func=lambda call: call.data == 'price_cat')
    def handle_category_price_category(call):
        '''
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–æ–≤ —Å –¥–∞–Ω–Ω—ã–º–∏ 'price_cat'

        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ü–µ–Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏. –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±–æ—Ä–∞ —Ü–µ–Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –≤—ã–≤–æ–¥—è—Ç—Å—è —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã.
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–Ω–æ–ø–∫–∏ —Å —Ü–µ–Ω–æ–≤—ã–º–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏, –∫ –∫–∞–∂–¥–æ–π –∏–∑ –Ω–∏—Ö –æ—Ç–Ω–æ—Å—è—Ç—Å—è –∫–Ω–æ–ø–∫–∏ —Å —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞–º–∏, –∏ –∫–Ω–æ–ø–∫—É "–Ω–∞–∑–∞–¥".

        Args:
            call (telebot.types.CallbackQuery): –û–±—ä–µ–∫—Ç callback-–∑–∞–ø—Ä–æ—Å–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—Ä–æ—Å–µ.
        '''
        user_id = call.message.chat.id
        markup = types.InlineKeyboardMarkup()
        btn_price_one = types.InlineKeyboardButton("‚ÇΩ", callback_data="priceone")
        btn_price_two = types.InlineKeyboardButton("‚ÇΩ‚ÇΩ", callback_data="pricetwo")
        btn_price_three = types.InlineKeyboardButton("‚ÇΩ‚ÇΩ‚ÇΩ", callback_data="pricethree")
        btn_price_four = types.InlineKeyboardButton("‚ÇΩ‚ÇΩ‚ÇΩ‚ÇΩ", callback_data="pricefour")
        bot.delete_message(user_id, call.message.message_id)
        markup.add(btn_price_one)
        markup.add(btn_price_two)
        markup.add(btn_price_three)
        markup.add(btn_price_four)
        markup.add(types.InlineKeyboardButton(text="–Ω–∞–∑–∞–¥", callback_data='category'))
        bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ü–µ–Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=markup)

    @bot.callback_query_handler(func=lambda call: call.data == 'priceone')
    def handle_category_price_cat_one(call):
        '''
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–æ–≤ —Å –¥–∞–Ω–Ω—ã–º–∏ 'priceone'.

        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ –Ω—É–∂–Ω–æ–π —Ü–µ–Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–Ω–æ–ø–∫–∏ —Å —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞–º–∏, –∫ –∫–∞–∂–¥–æ–π –∏–∑ –Ω–∏—Ö –æ—Ç–Ω–æ—Å—è—Ç—Å—è –∫–Ω–æ–ø–∫–∏ —Å —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞–º–∏, –∏ –∫–Ω–æ–ø–∫—É "–Ω–∞–∑–∞–¥".

        Args:
            call (telebot.types.CallbackQuery): –û–±—ä–µ–∫—Ç callback-–∑–∞–ø—Ä–æ—Å–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—Ä–æ—Å–µ.
        '''
        user_id = call.message.chat.id
        price_cat = 1
        rests = get_rest_by_price_cat(price_cat)
        markup = types.InlineKeyboardMarkup()
        for rest in rests:
            markup.add(types.InlineKeyboardButton(text=rest, callback_data=f'rest_choice:{rest}'))
        markup.add(types.InlineKeyboardButton(text="–Ω–∞–∑–∞–¥", callback_data='price_cat'))
        bot.delete_message(user_id, call.message.message_id)
        bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω:", reply_markup=markup)

    @bot.callback_query_handler(func=lambda call: call.data == 'pricetwo')
    def handle_category_price_cat_two(call):
        '''
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–æ–≤ —Å –¥–∞–Ω–Ω—ã–º–∏ 'pricetwo'.

        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ –Ω—É–∂–Ω–æ–π —Ü–µ–Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–Ω–æ–ø–∫–∏ —Å —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞–º–∏, –∫ –∫–∞–∂–¥–æ–π –∏–∑ –Ω–∏—Ö –æ—Ç–Ω–æ—Å—è—Ç—Å—è –∫–Ω–æ–ø–∫–∏ —Å —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞–º–∏, –∏ –∫–Ω–æ–ø–∫—É "–Ω–∞–∑–∞–¥".

        Args:
            call (telebot.types.CallbackQuery): –û–±—ä–µ–∫—Ç callback-–∑–∞–ø—Ä–æ—Å–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—Ä–æ—Å–µ.
        '''
        user_id = call.message.chat.id
        price_cat = 2
        rests = get_rest_by_price_cat(price_cat)
        markup = types.InlineKeyboardMarkup()
        for rest in rests:
            markup.add(types.InlineKeyboardButton(text=rest, callback_data=f'rest_choice:{rest}'))
        markup.add(types.InlineKeyboardButton(text="–Ω–∞–∑–∞–¥", callback_data='price_cat'))
        bot.delete_message(user_id, call.message.message_id)
        bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω:", reply_markup=markup)

    @bot.callback_query_handler(func=lambda call: call.data == 'pricethree')
    def handle_category_price_cat_three(call):
        '''
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–æ–≤ —Å –¥–∞–Ω–Ω—ã–º–∏ 'pricethree'.

        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ –Ω—É–∂–Ω–æ–π —Ü–µ–Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–Ω–æ–ø–∫–∏ —Å —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞–º–∏, –∫ –∫–∞–∂–¥–æ–π –∏–∑ –Ω–∏—Ö –æ—Ç–Ω–æ—Å—è—Ç—Å—è –∫–Ω–æ–ø–∫–∏ —Å —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞–º–∏, –∏ –∫–Ω–æ–ø–∫—É "–Ω–∞–∑–∞–¥".

        Args:
            call (telebot.types.CallbackQuery): –û–±—ä–µ–∫—Ç callback-–∑–∞–ø—Ä–æ—Å–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—Ä–æ—Å–µ.
        '''
        user_id = call.message.chat.id
        price_cat = 3
        rests = get_rest_by_price_cat(price_cat)
        markup = types.InlineKeyboardMarkup()
        for rest in rests:
            markup.add(types.InlineKeyboardButton(text=rest, callback_data=f'rest_choice:{rest}'))
        markup.add(types.InlineKeyboardButton(text="–Ω–∞–∑–∞–¥", callback_data='price_cat'))
        bot.delete_message(user_id, call.message.message_id)
        bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω:", reply_markup=markup)

    @bot.callback_query_handler(func=lambda call: call.data == 'pricefour')
    def handle_category_price_cat_four(call):
        '''
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–æ–≤ —Å –¥–∞–Ω–Ω—ã–º–∏ 'pricefour'.

        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ –Ω—É–∂–Ω–æ–π —Ü–µ–Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–Ω–æ–ø–∫–∏ —Å —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞–º–∏, –∫ –∫–∞–∂–¥–æ–π –∏–∑ –Ω–∏—Ö –æ—Ç–Ω–æ—Å—è—Ç—Å—è –∫–Ω–æ–ø–∫–∏ —Å —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞–º–∏, –∏ –∫–Ω–æ–ø–∫—É "–Ω–∞–∑–∞–¥".

        Args:
            call (telebot.types.CallbackQuery): –û–±—ä–µ–∫—Ç callback-–∑–∞–ø—Ä–æ—Å–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—Ä–æ—Å–µ.
        '''
        user_id = call.message.chat.id
        price_cat = 4
        rests = get_rest_by_price_cat(price_cat)
        markup = types.InlineKeyboardMarkup()
        for rest in rests:
            markup.add(types.InlineKeyboardButton(text=rest, callback_data=f'rest_choice:{rest}'))
        markup.add(types.InlineKeyboardButton(text="–Ω–∞–∑–∞–¥", callback_data='price_cat'))
        bot.delete_message(user_id, call.message.message_id)
        bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω:", reply_markup=markup)

    @bot.callback_query_handler(func=lambda call: call.data.startswith('rest_choice:'))
    def handle_rest_choice(call):
        '''
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–æ–≤ —Å –¥–∞–Ω–Ω—ã–º–∏, –Ω–∞—á–∏–Ω–∞—é—â–∏–º–∏—Å—è —Å 'rest_choice:'

        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –¥–ª—è –≤—ã–±–æ—Ä–∞ –±–ª—é–¥–∞ –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ.
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–Ω–æ–ø–∫–∏ —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –±–ª—é–¥ –∏ –∫–Ω–æ–ø–∫—É "–∫ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞–º".

        Args:
            call (telebot.types.CallbackQuery): –û–±—ä–µ–∫—Ç callback-–∑–∞–ø—Ä–æ—Å–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—Ä–æ—Å–µ.
        '''
        user_id = call.message.chat.id
        rest_name = call.data.split(':')[1]

        if current_restaurant.get(user_id) != rest_name:
            user_cart[user_id] = []

        current_restaurant[user_id] = rest_name

        dishes = get_dishes_by_rest(rest_name)
        markup = types.InlineKeyboardMarkup()
        for dish_name in dishes:
            markup.add(types.InlineKeyboardButton(text=dish_name, callback_data=f'dish_choice:{dish_name}'))
        markup.add(types.InlineKeyboardButton(text="–∫ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞–º", callback_data='back'))

        bot.edit_message_text(chat_id=user_id, message_id=call.message.message_id, text="–í—ã–±–µ—Ä–∏—Ç–µ –±–ª—é–¥–æ:", reply_markup=markup)


    

